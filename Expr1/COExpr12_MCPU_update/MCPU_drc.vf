////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MCPU_drc.vf
// /___/   /\     Timestamp : 08/21/2020 03:02:37
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: E:\sophomore\Logic\ISE14.7\14.7\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -sympath "D:/Download/OExp_final 2/OExp_final 2/OExp12/ipcore_dir" -intstyle ise -family kintex7 -verilog MCPU_drc.vf -w "D:/Download/OExp_final 2/OExp_final 2/OExp12/MCPU.sch"
//Design Name: MCPU
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MCPU(clk, 
            Data_in, 
            INT, 
            MIO_ready, 
            reset, 
            Addr_out, 
            CPU_MIO, 
            Data_out, 
            inst_out, 
            mem_w, 
            PC_out, 
            state);

    input clk;
    input [31:0] Data_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output [31:0] inst_out;
   output mem_w;
   output [31:0] PC_out;
   output [4:0] state;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire [1:0] XLXN_8;
   wire [1:0] XLXN_9;
   wire [1:0] XLXN_10;
   wire [1:0] XLXN_11;
   wire [2:0] XLXN_12;
   wire XLXN_22;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire [31:0] inst_out_DUMMY;
   
   assign inst_out[31:0] = inst_out_DUMMY[31:0];
   MCtrl  U11 (.clk(clk), 
              .Inst_in(inst_out_DUMMY[31:0]), 
              .MIO_ready(MIO_ready), 
              .overflow(XLXN_22), 
              .reset(reset), 
              .zero(XLXN_42), 
              .ALUSrcA(XLXN_4), 
              .ALUSrcB(XLXN_10[1:0]), 
              .ALU_operation(XLXN_12[2:0]), 
              .Branch(XLXN_5), 
              .CPU_MIO(CPU_MIO), 
              .IorD(XLXN_1), 
              .IRWrite(XLXN_2), 
              .MemRead(XLXN_31), 
              .MemtoReg(XLXN_9[1:0]), 
              .MemWrite(XLXN_32), 
              .PCSource(XLXN_11[1:0]), 
              .PCWrite(XLXN_7), 
              .PCWriteCond(XLXN_6), 
              .RegDst(XLXN_8[1:0]), 
              .RegWrite(XLXN_3), 
              .shift(XLXN_41), 
              .state_out(state[4:0]), 
              .unsign(XLXN_40));
   MDPath  U12 (.ALUSrcA(XLXN_4), 
               .ALUSrcB(XLXN_10[1:0]), 
               .ALU_operation(XLXN_12[2:0]), 
               .Branch(XLXN_5), 
               .clk(clk), 
               .data2CPU(Data_in[31:0]), 
               .IorD(XLXN_1), 
               .IRWrite(XLXN_2), 
               .MemtoReg(XLXN_9[1:0]), 
               .MIO_ready(MIO_ready), 
               .PCSource(XLXN_11[1:0]), 
               .PCWrite(XLXN_7), 
               .PCWriteCond(XLXN_6), 
               .RegDst(XLXN_8[1:0]), 
               .RegWrite(XLXN_3), 
               .reset(reset), 
               .data_out(Data_out[31:0]), 
               .Inst(inst_out_DUMMY[31:0]), 
               .M_addr(Addr_out[31:0]), 
               .overflow(XLXN_22), 
               .PC_Current(PC_out[31:0]), 
               .shift(XLXN_41), 
               .unsign(XLXN_40), 
               .zero(XLXN_42));
   AND2  XLXI_3 (.I0(XLXN_32), 
                .I1(XLXN_39), 
                .O(mem_w));
   INV  XLXI_4 (.I(XLXN_31), 
               .O(XLXN_39));
endmodule
