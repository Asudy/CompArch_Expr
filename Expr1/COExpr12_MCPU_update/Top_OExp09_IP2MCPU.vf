////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Top_OExp09_IP2MCPU.vf
// /___/   /\     Timestamp : 09/24/2020 22:06:07
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/Asudy/WorkSpace/GitHub/CA_Expr/Expr1/COExpr12_MCPU_update/ipcore_dir -intstyle ise -family kintex7 -verilog D:/Asudy/WorkSpace/GitHub/CA_Expr/Expr1/COExpr12_MCPU_update/Top_OExp09_IP2MCPU.vf -w D:/Asudy/WorkSpace/GitHub/CA_Expr/Expr1/COExpr12_MCPU_update/Top_OExp09_IP2MCPU.sch
//Design Name: Top_OExp09_IP2MCPU
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MCPU_MUSER_Top_OExp09_IP2MCPU(clk, 
                                     Data_in, 
                                     INT, 
                                     MIO_ready, 
                                     reset, 
                                     Addr_out, 
                                     CPU_MIO, 
                                     Data_out, 
                                     inst_out, 
                                     mem_w, 
                                     PC_out, 
                                     state);

    input clk;
    input [31:0] Data_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output [31:0] inst_out;
   output mem_w;
   output [31:0] PC_out;
   output [4:0] state;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire [1:0] XLXN_8;
   wire [1:0] XLXN_9;
   wire [1:0] XLXN_10;
   wire [1:0] XLXN_11;
   wire [2:0] XLXN_12;
   wire XLXN_22;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire [31:0] inst_out_DUMMY;
   
   assign inst_out[31:0] = inst_out_DUMMY[31:0];
   MCtrl  U11 (.clk(clk), 
              .Inst_in(inst_out_DUMMY[31:0]), 
              .MIO_ready(MIO_ready), 
              .overflow(XLXN_22), 
              .reset(reset), 
              .zero(XLXN_42), 
              .ALUSrcA(XLXN_4), 
              .ALUSrcB(XLXN_10[1:0]), 
              .ALU_operation(XLXN_12[2:0]), 
              .Branch(XLXN_5), 
              .CPU_MIO(CPU_MIO), 
              .IorD(XLXN_1), 
              .IRWrite(XLXN_2), 
              .MemRead(XLXN_31), 
              .MemtoReg(XLXN_9[1:0]), 
              .MemWrite(XLXN_32), 
              .PCSource(XLXN_11[1:0]), 
              .PCWrite(XLXN_7), 
              .PCWriteCond(XLXN_6), 
              .RegDst(XLXN_8[1:0]), 
              .RegWrite(XLXN_3), 
              .shift(XLXN_41), 
              .state_out(state[4:0]), 
              .unsign(XLXN_40));
   MDPath  U12 (.ALUSrcA(XLXN_4), 
               .ALUSrcB(XLXN_10[1:0]), 
               .ALU_operation(XLXN_12[2:0]), 
               .Branch(XLXN_5), 
               .clk(clk), 
               .data2CPU(Data_in[31:0]), 
               .IorD(XLXN_1), 
               .IRWrite(XLXN_2), 
               .MemtoReg(XLXN_9[1:0]), 
               .MIO_ready(MIO_ready), 
               .PCSource(XLXN_11[1:0]), 
               .PCWrite(XLXN_7), 
               .PCWriteCond(XLXN_6), 
               .RegDst(XLXN_8[1:0]), 
               .RegWrite(XLXN_3), 
               .reset(reset), 
               .data_out(Data_out[31:0]), 
               .Inst(inst_out_DUMMY[31:0]), 
               .M_addr(Addr_out[31:0]), 
               .overflow(XLXN_22), 
               .PC_Current(PC_out[31:0]), 
               .shift(XLXN_41), 
               .unsign(XLXN_40), 
               .zero(XLXN_42));
   AND2  XLXI_3 (.I0(XLXN_32), 
                .I1(XLXN_39), 
                .O(mem_w));
   INV  XLXI_4 (.I(XLXN_31), 
               .O(XLXN_39));
endmodule
`timescale 1ns / 1ps

module Top_OExp09_IP2MCPU(BTN_y, 
                          CLK_200M_N, 
                          CLK_200M_P, 
                          RSTN, 
                          SW, 
                          AN, 
                          BTN_x, 
                          CR, 
                          LED, 
                          led_clk, 
                          led_clrn, 
                          LED_PEN, 
                          led_sout, 
                          RDY, 
                          readn, 
                          SEGMENT, 
                          seg_clk, 
                          seg_clrn, 
                          SEG_PEN, 
                          seg_sout);

    input [3:0] BTN_y;
    input CLK_200M_N;
    input CLK_200M_P;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire clk_100mhz;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire IO_clk;
   wire [15:0] LED_out;
   wire [7:0] LE_out;
   wire NO;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [4:0] State;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_14;
   wire XLXN_54;
   wire XLXN_71;
   wire XLXN_81;
   wire [31:0] XLXN_82;
   wire [9:0] XLXN_85;
   wire [0:0] XLXN_86;
   wire [31:0] XLXN_87;
   wire XLXN_88;
   wire XLXN_92;
   wire XLXN_93;
   wire [1:0] XLXN_98;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_14[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   MCPU_MUSER_Top_OExp09_IP2MCPU  U1 (.clk(Clk_CPU), 
                                     .Data_in(Data_in[31:0]), 
                                     .INT(XLXN_81), 
                                     .MIO_ready(V5), 
                                     .reset(rst), 
                                     .Addr_out(Addr_out[31:0]), 
                                     .CPU_MIO(), 
                                     .Data_out(Data_out[31:0]), 
                                     .inst_out(inst[31:0]), 
                                     .mem_w(XLXN_71), 
                                     .PC_out(PC[31:0]), 
                                     .state(State[4:0]));
   RAM_B_new  U3 (.addra(XLXN_85[9:0]), 
                 .clka(clk_100mhz), 
                 .dina(XLXN_87[31:0]), 
                 .wea(XLXN_86[0]), 
                 .douta(XLXN_82[31:0]));
   MIO_BUS  U4 (.addr_bus(Addr_out[31:0]), 
               .BTN(BTN_OK[3:0]), 
               .clk(clk_100mhz), 
               .counter_out(Counter_out[31:0]), 
               .counter0_out(XLXN_81), 
               .counter1_out(XLXN_93), 
               .counter2_out(XLXN_92), 
               .Cpu_data2bus(Data_out[31:0]), 
               .led_out(LED_out[15:0]), 
               .mem_w(XLXN_71), 
               .ram_data_out(XLXN_82[31:0]), 
               .rst(rst), 
               .SW(SW_OK[15:0]), 
               .counter_we(XLXN_88), 
               .Cpu_data4bus(Data_in[31:0]), 
               .data_ram_we(XLXN_86[0]), 
               .GPIOe0000000_we(XLXN_54), 
               .GPIOf0000000_we(GPIOF0), 
               .Peripheral_in(CPU2IO[31:0]), 
               .ram_addr(XLXN_85[9:0]), 
               .ram_data_in(XLXN_87[31:0]));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPU2IO[31:0]), 
                   .data1({NO, NO, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(Counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(XLXN_54), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0}), 
                   .point_in({Div[31:0], Div[31:13], State[4:0], NO, NO, NO, 
         NO, NO, NO, NO, NO}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   SSeg7_Dev  U6 (.clk(clk_100mhz), 
                 .flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .rst(rst), 
                 .Start(Div[20]), 
                 .SW0(SW_OK[0]), 
                 .seg_clk(seg_clk), 
                 .seg_clrn(seg_clrn), 
                 .SEG_PEN(SEG_PEN), 
                 .seg_sout(seg_sout));
   SPIO  U7 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .P_Data(CPU2IO[31:0]), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(XLXN_98[1:0]), 
            .GPIOf0(), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(LED_out[15:0]), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .StepSW(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_14[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Counter_x  U10 (.clk(IO_clk), 
                  .clk0(Div[8]), 
                  .clk1(Div[9]), 
                  .clk2(Div[11]), 
                  .counter_ch(XLXN_98[1:0]), 
                  .counter_val(CPU2IO[31:0]), 
                  .counter_we(XLXN_88), 
                  .rst(rst), 
                  .counter_out(Counter_out[31:0]), 
                  .counter0_OUT(XLXN_81), 
                  .counter1_OUT(XLXN_93), 
                  .counter2_OUT(XLXN_92));
   Seg7_Dev  U61 (.flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .Scan({SW_OK[1], Div[19:18]}), 
                 .SW0(SW_OK[0]), 
                 .AN(AN[3:0]), 
                 .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .PData_in(CPU2IO[31:0]), 
            .rst(rst), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   clk_200Mto100M  U81 (.clk200N(CLK_200M_N), 
                       .clk200P(CLK_200M_P), 
                       .RST(N0), 
                       .clkdiv(), 
                       .clk100MHz(clk_100mhz));
   INV  XLXI_13 (.I(Clk_CPU), 
                .O(IO_clk));
   VCC  XLXI_14 (.P(V5));
   GND  XLXI_15 (.G(NO));
   GND  XLXI_22 (.G(N0));
endmodule
